// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositories.DataContext;

#nullable disable

namespace BeerApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Beer", b =>
                {
                    b.Property<int>("BeerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BeerId"), 1L, 1);

                    b.Property<double>("AlcoholContent")
                        .HasColumnType("float");

                    b.Property<int>("BreweryId")
                        .HasColumnType("int");

                    b.Property<bool>("InProduction")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("OutOfProductionDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("SellingPriceToClients")
                        .HasColumnType("Decimal(10,2)");

                    b.Property<decimal>("SellingPriceToWholesalers")
                        .HasColumnType("Decimal(10,2)");

                    b.HasKey("BeerId");

                    b.HasIndex("BreweryId");

                    b.HasIndex("Name", "OutOfProductionDate", "BreweryId")
                        .IsUnique();

                    b.ToTable("Beer", (string)null);

                    b.HasData(
                        new
                        {
                            BeerId = 1,
                            AlcoholContent = 11.0,
                            BreweryId = 1,
                            InProduction = true,
                            Name = "Forte Hendrik Quadrupel",
                            OutOfProductionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellingPriceToClients = 10.99m,
                            SellingPriceToWholesalers = 3.99m
                        },
                        new
                        {
                            BeerId = 2,
                            AlcoholContent = 6.0,
                            BreweryId = 1,
                            InProduction = true,
                            Name = "Brugse Zot Blond",
                            OutOfProductionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellingPriceToClients = 12.99m,
                            SellingPriceToWholesalers = 4.99m
                        },
                        new
                        {
                            BeerId = 3,
                            AlcoholContent = 0.40000000000000002,
                            BreweryId = 1,
                            InProduction = true,
                            Name = "Sportzot",
                            OutOfProductionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellingPriceToClients = 6.99m,
                            SellingPriceToWholesalers = 1.59m
                        },
                        new
                        {
                            BeerId = 4,
                            AlcoholContent = 5.0,
                            BreweryId = 2,
                            InProduction = true,
                            Name = "Bourgogne des Flandres",
                            OutOfProductionDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SellingPriceToClients = 2.59m,
                            SellingPriceToWholesalers = 0.29m
                        },
                        new
                        {
                            BeerId = 5,
                            AlcoholContent = 7.5,
                            BreweryId = 1,
                            InProduction = false,
                            Name = "Brugse Zot Dubbel",
                            OutOfProductionDate = new DateTime(2022, 5, 9, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            SellingPriceToClients = 9.99m,
                            SellingPriceToWholesalers = 3.99m
                        });
                });

            modelBuilder.Entity("Domain.Entities.Brewery", b =>
                {
                    b.Property<int>("BreweryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BreweryId"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BreweryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Brewery", (string)null);

                    b.HasData(
                        new
                        {
                            BreweryId = 1,
                            Address = "Walplein 26 8000 Brugge",
                            Email = "info@halvemaan.be",
                            Name = "Huisbrouwerij De Halve Maan"
                        },
                        new
                        {
                            BreweryId = 2,
                            Address = "Kartuizerinnenstraat 6 8000 Brugge",
                            Email = "visits@bourgognedesflandres",
                            Name = "Bourgogne des Flandres"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Beer", b =>
                {
                    b.HasOne("Domain.Entities.Brewery", "Brewery")
                        .WithMany("Beers")
                        .HasForeignKey("BreweryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brewery");
                });

            modelBuilder.Entity("Domain.Entities.Brewery", b =>
                {
                    b.Navigation("Beers");
                });
#pragma warning restore 612, 618
        }
    }
}
